name: 'Deploy to EC2'

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker-compose.yml'
  workflow_dispatch: # Enables manual trigger
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker-compose.yml'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME  }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    name: 'Deploy to EC2'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts
          cat ~/.ssh/id_rsa | wc -l
          ls -la ~/.ssh/id_rsa

      - name: Deploy to EC2
        run: |
          # SSH into EC2 and deploy
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }} << 'EOF'
            # Install Docker if not already installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker $USER
              sudo systemctl enable docker
            fi

            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Clone the repository
            echo "Cloning repository..."
            rm -rf ~/sec-tools
            git clone https://github.com/Junnygram/sec-tools.git ~/sec-tools
            
            # Navigate to project directory
            cd ~/sec-tools
            
            # Build and start containers
            echo "Building Docker containers..."
            docker-compose build
            
            echo "Starting Docker containers..."
            docker-compose up -d
            
            # Print container status
            docker-compose ps
            
            # Get the public IP address
            PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
            echo "Application deployed successfully!"
            echo "Frontend URL: http://$PUBLIC_IP:3000"
            echo "Backend URL: http://$PUBLIC_IP:8080"
          EOF
