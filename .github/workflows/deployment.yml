name: EC2 Deploy & Scan

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker-compose.yml'
  workflow_dispatch:

env:
  EC2_USERNAME: ubuntu

jobs:
  deploy:
    name: Build, Scan and Deploy on EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Mask Secrets
        run: |
          echo "::add-mask::${{ secrets.SSH_PRIVATE_KEY }}"
          echo "::add-mask::${{ secrets.EMAIL_PASS }}"

      - name: Setup SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: SSH into EC2 and run deployment
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e

          echo "Installing Docker, Compose, Trivy..."
          sudo apt update -y
          sudo apt install -y docker.io curl wget apt-transport-https gnupg lsb-release mailutils

          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER

          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

          echo "Cloning project..."
          rm -rf ~/sec-tools
          git clone https://github.com/Junnygram/sec-tools.git ~/sec-tools
          cd ~/sec-tools

          echo "Building images..."
          sudo docker-compose build

          FRONTEND_IMAGE=$(docker-compose config | awk '/frontend:/{getline; if($1=="image:") print $2}')
          BACKEND_IMAGE=$(docker-compose config | awk '/backend:/{getline; if($1=="image:") print $2}')

          echo "Scanning images with Trivy..."
          sudo trivy image --format json -o frontend-scan.json $FRONTEND_IMAGE || echo "Frontend scan failed"
          sudo trivy image --format json -o backend-scan.json $BACKEND_IMAGE || echo "Backend scan failed"

          echo "Sending reports..."
          echo "Security scan completed. See attached reports." | mail -s "Trivy Scan Reports" \
            -a frontend-scan.json -a backend-scan.json ${{ secrets.EMAIL_TO }}

          echo "Running containers..."
          docker-compose down
          docker-compose up -d

          echo "âœ… Deployment complete!"
          echo "Frontend should be live on http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):3000"
          EOF
