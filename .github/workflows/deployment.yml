name: Deploy to EC2

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker-compose.yml'
  workflow_dispatch:
    inputs:
      ssh_debug:
        description: 'Enable SSH debugging'
        required: false
        type: boolean
        default: false
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker-compose.yml'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ubuntu
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    name: Secure Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Docker & Docker Compose are available
        run: |
          sudo systemctl start docker
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
              -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

      - name: Build Docker Images
        run: docker-compose build

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan Frontend Image
        run: trivy image --format json --output frontend-scan.json sec-tools-frontend-1

      - name: Scan Backend Image
        run: trivy image --format json --output backend-scan.json  sec-tools-backend-1

      - name: Combine Scan Reports
        run: |
          echo '{"frontend":' > trivy-report.json
          cat frontend-scan.json >> trivy-report.json
          echo ',"backend":' >> trivy-report.json
          cat backend-scan.json >> trivy-report.json
          echo '}' >> trivy-report.json

      - name: Send Email Notification
        run: |
          sudo apt-get update && sudo apt-get install -y mailutils
          echo "Docker scan complete. Report attached." | mail -s "Docker Image Scan Report" -a trivy-report.json ${{ secrets.EMAIL_TO }}

      - name: Setup SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: SSH Deploy to EC2
        run: |
          SSH_DEBUG=""
          if [[ "${{ github.event.inputs.ssh_debug }}" == "true" ]]; then
            SSH_DEBUG="-v"
          fi

          ssh $SSH_DEBUG -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }} << 'EOF'
            set -e

            sudo systemctl start docker

            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
                -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "Cloning latest version..."
            rm -rf ~/sec-tools
            git clone https://github.com/Junnygram/sec-tools.git ~/sec-tools
            cd ~/sec-tools

            echo "Rebuilding and restarting app..."
            docker-compose down
            docker-compose build
            docker-compose up -d

            docker-compose ps
            PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
            echo "Frontend: http://$PUBLIC_IP:3000"
            echo "Backend: http://$PUBLIC_IP:8080"
          EOF
